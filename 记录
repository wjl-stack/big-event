注册：
    注册参数校验：
        可以使用@Validation注解来实现
        在需要传入的参数前@Pattern(regexp = "^\\S{5,16}$"，但是浏览器会输出错误码：500
        所以需要进行全局失败异常处理，新建一个类，使用@RestControllerAdvice，@ExeptionHandler注解

登录：
    令牌：JWT技术，一种简洁的自包含的格式，用于通信双方以json数据格式安全的传输信息
        组成：第一部分：头，记录令牌类型，签名算法等
             第二部分：有效载荷，携带一些自定义信息、默认信息等
             第三部分：签名，防止令牌被篡改，加入指定密钥
    拦截器：使所有的请求都经过拦截器，避免在接口中重复验证,注意登录和注册接口放行

获取用户信息：
    使用 @GetMapping 获取数据。
    使用 @PostMapping 提交数据或创建资源。
    在UserController类中创建UserInfo方法，获取token，并通过@RequestHeader获取请求头
    使用
        Map<String,Object> map =  JwtUtil.parseToken(token);
    解析token，最后返回给Result类
    复用token解析信息
        ThreadLocal：提供线程局部变量，存取数据是安全的，互不影响
                     用完记得remove（）方法释放